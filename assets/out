#!/bin/sh
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp /tmp/resource-out.XXXXXX)

cat > $payload <&0

export AWS_DEFAULT_REGION=$(cat $payload|jq -r '.params.region // .source.region')

instance_id_file="$(cat $payload|jq -r '.params.instance_id_file // .source.instance_id_file')"
name="$(cat $payload|jq -r '.params.name // .source.name')"

if [ -z "$name" ]; then
  echo "no name specified" >&2
  exit 1
fi

if test -f "$instance_id_file"; then
  echo "instance id file not found" >&2
  exit 1
fi

instance_id=$(cat .vagrant/machines/default/aws/id)

if [ -z "$instance_id" ]; then
  echo "instance_id_file empty" >&2
  exit 1
fi

description="Created by concourse-aws-ami-resource"

# give command to create image
response=$(aws ec2 create-image --instance-id $instance_id --name $name --description $description)

# get the ID
ami_id=$(echo $response|jq -r '.ImageId')

# wait for image to be available
aws ec2 wait image-available $ami_id

# get some metadata
metadata=$(aws ec2 describe-images --image-ids $ami_id | jq -r '.Images[0]|{Name,CreationDate,OwnerId}'

jq -n "{
  version: ${response},
  metadata: ${metadata}
}" >&3
