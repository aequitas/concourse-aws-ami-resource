#!/bin/sh
# vim: set ft=sh

# exit if any command fails, even in pipes
set -e -o pipefail

test -z "$DEBUG" || set -x

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source=$1

if [ -z "$source" ]; then
    echo "usage: $0 <path/to/source>"
    exit 1
fi

payload=$(mktemp /tmp/resource-out.XXXXXX)

cat > "$payload" <&0
test -z "$DEBUG" || cat "$payload"

cd "$source"

export PACKER_LOG=1
export PACKER_LOG_PATH=packer.log

template_path="$(jq -r '.source.template_path' < "$payload")"

# run packer to create AMI
packer build -machine-readable "$template_path" | tee build.log

# write AMI id as output
ami_id="$(grep 'artifact,0,id' build.log | cut -d, -f6 | cut -d: -f2)"

version="{ImageId: $(echo "$ami_id"| jq -R .)}"
metadata="[]"

jq -n "{
    version: ${version},
    metadata: ${metadata}
}" >&3
